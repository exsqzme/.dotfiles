# https://github.com/bryce-s/dotfiles/blob/master/.skhdrc
# https://github.com/sgoodluck/mac-dotfiles/blob/main/skhd/skhdrc
# https://digitalblake.com/2021/08/27/yabai-and-skhd-configs/
# === Session defaults ===
# reset border color in default mode
:: default : yabai -m config active_window_border_color 0xE032CD32

# kickstart yabai 
# cmd + alt - y : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"
cmd + alt - y : skhd --restart-service

# lock screen immediately
cmd - escape : pmset displaysleepnow 

# logout
# cmd + shift - o : osascript -e 'tell app "System Events" to log out'

# power down 
# cmd + shift - p : osascript -e 'tell app "System Events" to shut down'

# reboot
# cmd + shift - b : osascript -e 'tell app "System Events" to restart'

# sleep 
cmd + shift - s : osascript -e 'tell application "System Events" to sleep'

# === launch commands ===
# open kitty terminal, blazingly fast compared to iTerm/Hyper
cmd - return : open -a /Applications/kitty.app/Contents/MacOS/kitty
# cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~
cmd + shift - return : open -a /Applications/Obsidian.app/Contents/MacOS/Obsidian

# open firefox
# cmd + shift - return : open -na "Google Chrome"
# cmd + shift - return : open -na /Applications/Firefox.app

# open vscode
# cmd + ctrl - return : open -na /Applications/Visual\ Studio\ Code.app/

# open finder
# cmd + shift - f : open `pwd`

# open system preferences
# hyper - c : open "x-apple.systempreferences:"

# === Resize Mode ===
# Set resize border color 
:: resize @ : yabai -m config active_window_border_color 0xFFFF00FF
# toggle resize mode 
resize < shift + alt - s ; default
default < shift + alt - s ; resize

# increase window size
resize < h : yabai -m window --resize left:-20:0
resize < j : yabai -m window --resize bottom:0:20
resize < k : yabai -m window --resize top:0:-20
resize < l : yabai -m window --resize right:20:0

# decrease window size
resize < shift - h : yabai -m window --resize left:20:0
resize < shift - j : yabai -m window --resize bottom:0:-20
resize < shift - k : yabai -m window --resize top:0:20
resize < shift - l : yabai -m window --resize right:-20:0

# Equalize size of windows
shift + alt - e : yabai -m space --balance








# Float / Unfloat window
shift + alt - t : \
    yabai -m window --toggle float --grid 4:4:1:1:2:2; \
    yabai -m window --toggle border

shift + alt - b : yabai -m window --toggle border

# toggle sticky
shift + alt - p : yabai -m window --toggle sticky --toggle topmost;

# toggle stay on top
# shift + alt - t : yabai -m window --toggle topmost;




# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1


# TODO fullscreen in sticky?
# alt command to use
# use floating expands above.. need to be floated??
# dont think so and applies to sticky or floats !!  
#
#TODO: sticky maintain focus on screen switch

# float / unfloat window and center on screen
# TODO Combine and jq to see mode and then action depending
# TODO maybe decouple actions that float then center etc to separate
# actions - float action and center action or pip action
shift + alt - down : yabai -m window --grid 4:4:1:1:2:2

# toggle sticky, float and resize to picture-in-picture size
# shift + alt - p : yabai -m window --grid 5:5:4:0:1:1





# toggle window parent zoom
alt - f : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
shift + alt - f : yabai -m window --toggle zoom-fullscreen

# minimize window
shift + alt - m : yabai -m window --minimize

# toggle window native fullscreen
# shift + alt - f : yabai -m window --toggle native-fullscreen







# === Navigation ===
# window focus
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

alt - left : yabai -m window --focus west
alt - down : yabai -m window --focus south
alt - up : yabai -m window --focus north
alt - right : yabai -m window --focus east

# === Modification === 

# swap window
# Add the active window to the window or stack to the {direction}
# Note that this only works when the active window does *not* already belong to a stack
shift + alt - h : ~/.config/skhd/yastack west
shift + alt - j : ~/.config/skhd/yastack south
shift + alt - k : ~/.config/skhd/yastack north
shift + alt - l : ~/.config/skhd/yastack east
# shift + alt - h : yabai -m window --swap west
# shift + alt - j : yabai -m window --swap south
# shift + alt - k : yabai -m window --swap north
# shift + alt - l : yabai -m window --swap east


# Move window relatively -- move window and split
cmd + shift - h : yabai -m window --warp west
cmd + shift - j : yabai -m window --warp south
cmd + shift - k : yabai -m window --warp north
cmd + shift - l : yabai -m window --warp east






# ===== WORKSPACES ======

# space focus and creation
cmd - tab : yabai -m space --focus next || yabai -m space --focus first
cmd + shift - tab : yabai -m space --focus prev || yabai -m space --focus last
# cmd - x : yabai -m space --focus recent
cmd - 1 : yabai -m space --focus 1
cmd - 2 : yabai -m space --focus 2
cmd - 3 : yabai -m space --focus 3
cmd - 4 : yabai -m space --focus 4
cmd - 5 : yabai -m space --focus 5
cmd - 6 : yabai -m space --focus 6
cmd - 7 : yabai -m space --focus 7
cmd - 8 : yabai -m space --focus 8
cmd - 9 : yabai -m space --focus 9

# create a space
cmd + alt - n : yabai -m space --create; \
		sketchybar --update

# destroy current space
cmd + alt - d : yabai -m space --destroy

# send window to space 
# cmd + shift - x : yabai -m window --space recent
cmd + shift - 1 : yabai -m window --space 1
cmd + shift - 2 : yabai -m window --space 2
cmd + shift - 3 : yabai -m window --space 3
cmd + shift - 4 : yabai -m window --space 4
cmd + shift - 5 : yabai -m window --space 5
cmd + shift - 6 : yabai -m window --space 6
cmd + shift - 7 : yabai -m window --space 7
cmd + shift - 8 : yabai -m window --space 8

# Move focus + window to space
cmd + ctrl - m : yabai -m window --space last; yabai -m space --focus last
cmd + ctrl - p : yabai -m window --space prev; yabai -m space --focus prev
cmd + ctrl - n : yabai -m window --space next; yabai -m space --focus next
cmd + ctrl - 1 : yabai -m window --space 1; yabai -m space --focus 1
cmd + ctrl - 2 : yabai -m window --space 2; yabai -m space --focus 2
cmd + ctrl - 3 : yabai -m window --space 3; yabai -m space --focus 3
cmd + ctrl - 4 : yabai -m window --space 4; yabai -m space --focus 4


# Enable / Disable gaps in current workspace
lcmd - i : yabai -m space --toggle padding; \
	  yabai -m space --toggle gap; \
	  yabai -m config external_bar off:0:0; \
	  sketchybar --bar hidden=true;

rcmd - i : yabai -m space --toggle padding; \
	 yabai -m space --toggle gap; \
	 yabai -m config external_bar all:30:0;\
	 sketchybar --bar hidden=false;

# Rotate windows clockwise and anticlockwise
shift + alt - r         : yabai -m space --rotate 270
# shift + alt - c : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# toggle window split type
alt - e : yabai -m window --toggle split

# change layout of desktop
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float
ctrl + alt - y : yabai -m space --layout stack

# TMP FIX INTEGRATE TODO
alt - p: yabai -m window --focus stack.prev || yabai -m window --focus stack.last
alt - n: yabai -m window --focus stack.next || yabai -m window --focus stack.first
# alt - f: yabai -m window --focus stack.first
# alt - g: yabai -m window --focus stack.last


# Set insertion point for focused container
shift + lctrl + alt - h : yabai -m window --insert west
shift + lctrl + alt - j : yabai -m window --insert south
shift + lctrl + alt - k : yabai -m window --insert north
shift + lctrl + alt - l : yabai -m window --insert east

# override hide window mac setting
cmd - h : yabai -m query --spaces --space
cmd + alt - h : yabai -m query --spaces --space





# λ yabai -m query --spaces --space 
# {
# 	"id":3,
# 	"uuid":"4616A2C0-F6C8-4ED4-AE0B-7C932A834227",
# 	"index":1,
# 	"label":"",
# 	"type":"stack",
# 	"display":1,
# 	"windows":[1419, 1501, 1504, 1505, 1454, 1475],
# 	"first-window":1419,
# 	"last-window":1419,
# 	"has-focus":true,
# 	"is-visible":true,
# 	"is-native-fullscreen":false
# }
#
# ~ 
# λ yabai -m query --windows --window  
# {
# 	"id":1419,
# 	"pid":3390,
# 	"app":"kitty",
# 	"title":"yabai -m query --windows --window",
# 	"frame":{
# 		"x":14.0000,
# 		"y":68.0000,
# 		"w":3812.0000,
# 		"h":1453.0000
# 	},
# 	"role":"AXWindow",
# 	"subrole":"AXStandardWindow",
# 	"display":1,
# 	"space":1,
# 	"level":0,
# 	"opacity":1.0000,
# 	"split-type":"none",
# 	"split-child":"second_child",
# 	"stack-index":1,
# 	"can-move":true,
# 	"can-resize":true,
# 	"has-focus":true,
# 	"has-shadow":false,
# 	"has-border":true,
# 	"has-parent-zoom":false,
# 	"has-fullscreen-zoom":false,
# 	"is-native-fullscreen":false,
# 	"is-visible":true,
# 	"is-minimized":false,
# 	"is-hidden":false,
# 	"is-floating":false,
# 	"is-sticky":false,
# 	"is-topmost":false,
# 	"is-grabbed":false
# }
